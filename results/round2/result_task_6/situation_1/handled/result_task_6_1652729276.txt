before running, all old files have been removed.

experience pool has been removed.

setting:1

#---------- generating basic plan! -----------
(find_table rob table dining)
(walk rob dining kitchen)
(find_cupboard rob cupboard kitchen)
(open_cupboard rob cupboard kitchen)
(find_fork rob fork_1 cupboard kitchen)
(takeout_fork rob fork_1 cupboard kitchen)
(move_fork rob fork_1 kitchen dining)
(place_fork rob fork_1 table dining)
(walk rob dining kitchen)
(find_plate rob plate_1 cupboard kitchen)
(takeout_plate rob plate_1 cupboard kitchen)
(move_plate rob plate_1 kitchen dining)
(place_plate rob plate_1 table dining)
(walk rob dining kitchen)
(close_cupboard rob cupboard kitchen)
; cost = 15 (unit cost)

#---------- generating situation! -----------
situation index: 1
situation: the plate_1 is not found.
action corresponding to situation: find_cupboard
corresponding predicate: plate_not_found
object manipulated by robot: cupboard
object in situation: plate_1

#---------- executing plan! -----------
action: ['find_table', 'rob', 'table', 'dining']
action (decoded): a robot finds a table in dining room.
this action is executed!

action: ['walk', 'rob', 'dining', 'kitchen']
action (decoded): a robot walks from dining room to kitchen room.
this action is executed!

action: ['find_cupboard', 'rob', 'cupboard', 'kitchen']
action (decoded): a robot finds a cupboard in kitchen room.

#---------- checking unexecuted actions! -----------
['find_cupboard', 'rob', 'cupboard', 'kitchen']
['open_cupboard', 'rob', 'cupboard', 'kitchen']
['find_fork', 'rob', 'fork_1', 'cupboard', 'kitchen']
['takeout_fork', 'rob', 'fork_1', 'cupboard', 'kitchen']
['move_fork', 'rob', 'fork_1', 'kitchen', 'dining']
['place_fork', 'rob', 'fork_1', 'table', 'dining']
['walk', 'rob', 'dining', 'kitchen']
['find_plate', 'rob', 'plate_1', 'cupboard', 'kitchen']
['takeout_plate', 'rob', 'plate_1', 'cupboard', 'kitchen']
['move_plate', 'rob', 'plate_1', 'kitchen', 'dining']
['place_plate', 'rob', 'plate_1', 'table', 'dining']
['walk', 'rob', 'dining', 'kitchen']
['close_cupboard', 'rob', 'cupboard', 'kitchen']

unexecuted action: ['find_cupboard', 'rob', 'cupboard', 'kitchen']
unexecuted action (decoded): a robot finds a cupboard in kitchen room.
! prompt design
raw prompt: is it suitable that a robot finds a cupboard if the plate is not found?
! response from LLM
response (raw prompt): no, it is not suitable for a robot to find a cupboard if the plate is not found
#---------- current plan cannot be executed! -----------

#---------- adding constraint -----------
! step 1: supplement constraint to action precondition
step 1 is done!
! step 2: supplement action's parameter
step 2 is done!
! step 3: supplement type
step 3 is skipped!
! step 4: supplement predicates
step 4 is done!
! step 5: supplement init
step 5 is done!
! step 6: supplement object
step 6 is skipped!

#---------- generating modified_plan_1! -----------
(find_table rob table dining)
(walk rob dining kitchen)
(find_cupboard rob cupboard kitchen plate_2)
(open_cupboard rob cupboard kitchen)
(find_fork rob fork_1 cupboard kitchen)
(takeout_fork rob fork_1 cupboard kitchen)
(move_fork rob fork_1 kitchen dining)
(place_fork rob fork_1 table dining)
(walk rob dining kitchen)
(find_plate rob plate_1 cupboard kitchen)
(takeout_plate rob plate_1 cupboard kitchen)
(move_plate rob plate_1 kitchen dining)
(place_plate rob plate_1 table dining)
(walk rob dining kitchen)
(close_cupboard rob cupboard kitchen)
; cost = 15 (unit cost)
