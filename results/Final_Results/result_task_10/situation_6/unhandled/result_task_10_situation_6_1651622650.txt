#---------- generating basic_plan! -----------
(walk rob_1 dining kitchen)
(find_coke rob_1 coke_1 kitchen)
(grasp_coke rob_1 coke_1 kitchen)
(find_glass rob_1 glass_1 kitchen)
(pour_coke rob_1 coke_1 glass_1 kitchen)
(move_glass rob_1 glass_1 kitchen table_1 dining)
(place_glass rob_1 glass_1 table_1 dining)
; cost = 7 (unit cost)

#---------- generating situation! -----------
situation: the glass is missing.
corresponding predicate: glass_is_missing
object in situation: glass
action that has situation: find_glass
object manipulated by robot: glass

#---------- executing plan! -----------
next action: ['walk', 'rob_1', 'dining', 'kitchen']
next action (decoded): a robot walks from dining room to kitchen room.
this action is executed!

next action: ['find_coke', 'rob_1', 'coke_1', 'kitchen']
next action (decoded): a robot finds a coke in kitchen room.
this action is executed!

next action: ['grasp_coke', 'rob_1', 'coke_1', 'kitchen']
next action (decoded): a robot grasps a coke in kitchen room.
this action is executed!

next action: ['find_glass', 'rob_1', 'glass_1', 'kitchen']
next action (decoded): a robot finds a glass in kitchen room.

#---------- checking unexecuted actions! -----------
['find_glass', 'rob_1', 'glass_1', 'kitchen']
['pour_coke', 'rob_1', 'coke_1', 'glass_1', 'kitchen']
['move_glass', 'rob_1', 'glass_1', 'kitchen', 'table_1', 'dining']
['place_glass', 'rob_1', 'glass_1', 'table_1', 'dining']

unexecuted action: ['find_glass', 'rob_1', 'glass_1', 'kitchen']
unexecuted action (decoded): a robot finds a glass in kitchen room.
! prompt design
raw prompt: is it acceptable that a robot finds a glass in kitchen room if the glass is missing?
! experience found
! response from LLM
response (raw prompt): ["'no, it is not acceptable'"]
#---------- current plan cannot be executed! -----------

#---------- adding constraint -----------
! step 1: supplement constraint to action precondition
step 1 is done!
! step 2: supplement action's parameter
step 2 is skipped!
! step 3: supplement type
step 3 is skipped!
! step 4: supplement predicates
step 4 is done!
! step 5: supplement init
step 5 is done!
! step 6: supplement object
step 6 is skipped!

#---------- generating modified_plan_1! -----------
#---------- no modified_plan_1 found! -----------


#---------- call llm_utensils -----------
#---------- utensil that robot can operate: ----------
 ['drinking glass', 'bottle water', 'cleaning bottle', 'cloth napkin', 'colander', 'glass', 'sponge', 'condiment shaker', 'cutlery fork', 'coffee', 'cutting board', 'mug', 'wine', 'oven tray', 'juice', 'condiment bottle', 'tea', 'dish bowl', 'cooking pot', 'bucket']

! prompt design
raw prompt: can a robot pours coke into drinking glass in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot moves a drinking glass in kitchen room near a table in table room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot places a drinking glass on a table in dining room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot pours coke into bottle water in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot moves a bottle water in kitchen room near a table in table room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot places a bottle water on a table in dining room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot pours coke into cleaning bottle in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into cloth napkin in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into colander in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into glass in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot moves a glass in kitchen room near a table in table room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot places a glass on a table in dining room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot pours coke into sponge in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into condiment shaker in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into cutlery fork in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into coffee in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into cutting board in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into mug in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot moves a mug in kitchen room near a table in table room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot places a mug on a table in dining room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot pours coke into wine in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into oven tray in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into juice in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into condiment bottle in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into tea in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into dish bowl in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into cooking pot in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot pours coke into bucket in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]
#---------- capable_utensils_actionknowledge: ----------
 ['drinking glass', 'bottle water', 'glass', 'mug']

! prompt design
raw prompt: there are some utensils, such as drinking glass, bottle water, glass, mug. which is the most suitable to replace a glass to drink coke if the glass is missing? if there is no reasonable answer, please output no.
! results from LLM
response (raw prompt): ['bottle water']

#---------- most possible utensil: ---------- 
 bottle water

#---------- add effect -----------
! step 1: supplement object
step 1 is done.
! step 2: supplement init
step 2 is done.
! step 3: change goal
problem_goal_1: ['and (glass_is_filled glass_1) (glass_is_placed glass_1))']
target_object: glass
utensil: bottle_water
step 3 is done.

#---------- generating modified_plan_2! -----------
(walk rob_1 dining kitchen)
(find_coke rob_1 coke_1 kitchen)
(grasp_coke rob_1 coke_1 kitchen)
(find_glass rob_1 bottle_water_1 kitchen)
(pour_coke rob_1 coke_1 bottle_water_1 kitchen)
(move_glass rob_1 bottle_water_1 kitchen table_1 dining)
(place_glass rob_1 bottle_water_1 table_1 dining)
; cost = 7 (unit cost)
