#---------- generating basic_plan! -----------
(walk rob_1 dining kitchen)
(find_cup rob_1 cup_1 kitchen)
(find_faucet rob_1 faucet_1 kitchen)
(turnon_faucet rob_1 faucet_1 kitchen)
(hold_cup rob_1 cup_1 kitchen)
(fill_cup rob_1 cup_1 faucet_1 kitchen)
(move_cup rob_1 cup_1 kitchen dining)
(place_cup rob_1 cup_1 table_1 dining)
(walk rob_1 dining kitchen)
(turnoff_faucet rob_1 faucet_1 kitchen)
; cost = 10 (unit cost)

#---------- generating situation! -----------
situation: water is dirty.
corresponding predicate: water_is_dirty
object in situation: water
action that has situation: turnon_faucet
object manipulated by robot: faucet

#---------- executing plan! -----------
next action: ['walk', 'rob_1', 'dining', 'kitchen']
next action (decoded): a robot walks from dining room to kitchen room.
this action is executed!

next action: ['find_cup', 'rob_1', 'cup_1', 'kitchen']
next action (decoded): a robot finds a cup in kitchen room.
this action is executed!

next action: ['find_faucet', 'rob_1', 'faucet_1', 'kitchen']
next action (decoded): a robot finds a faucet in kitchen room.
this action is executed!

next action: ['turnon_faucet', 'rob_1', 'faucet_1', 'kitchen']
next action (decoded): a robot turns on a faucet in kitchen room.

#---------- checking unexecuted actions! -----------
['turnon_faucet', 'rob_1', 'faucet_1', 'kitchen']
['hold_cup', 'rob_1', 'cup_1', 'kitchen']
['fill_cup', 'rob_1', 'cup_1', 'faucet_1', 'kitchen']
['move_cup', 'rob_1', 'cup_1', 'kitchen', 'dining']
['place_cup', 'rob_1', 'cup_1', 'table_1', 'dining']
['walk', 'rob_1', 'dining', 'kitchen']
['turnoff_faucet', 'rob_1', 'faucet_1', 'kitchen']

unexecuted action: ['turnon_faucet', 'rob_1', 'faucet_1', 'kitchen']
unexecuted action (decoded): a robot turns on a faucet in kitchen room.
! prompt design
raw prompt: is it acceptable that a robot turns on a faucet in kitchen room if water is dirty?
! response from LLM
response (raw prompt): ['no, it is not acceptable for a robot to turn on a faucet in a kitchen room if water is dirty']
#---------- current plan cannot be executed! -----------

#---------- adding constraint -----------
! step 1: supplement constraint to action precondition
step 1 is done!
! step 2: supplement action's parameter
step 2 is done!
! step 3: supplement type
step 3 is done!
! step 4: supplement predicates
step 4 is done!
! step 5: supplement init
step 5 is done!
! step 6: supplement object
step 6 is done!

#---------- generating modified_plan_1! -----------
#---------- no modified_plan_1 found! -----------


#---------- call llm_utensils -----------
#---------- utensil that robot can operate: ----------
 ['rag', 'cloth napkin', 'colander', 'bucket', 'cutlery knife', 'mug', 'paper towel', 'condiment shaker', 'condiment bottle', 'place mat', 'coffee filter', 'cleaning bottle', 'wooden spoon', 'wine glass']

! prompt design
raw prompt: can a robot fills a cup with rag from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot fills a cup with cloth napkin from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot fills a cup with colander from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot fills a cup with bucket from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot fills a cup with cutlery knife from faucet in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot fills a cup with mug from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'yes'"]

! prompt design
raw prompt: can a robot fills a cup with paper towel from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot fills a cup with condiment shaker from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot fills a cup with condiment bottle from faucet in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot fills a cup with place mat from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot fills a cup with coffee filter from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot fills a cup with cleaning bottle from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot fills a cup with wooden spoon from faucet in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot fills a cup with wine glass from faucet in kitchen room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]
#---------- capable_utensils_actionknowledge: ----------
 ['mug']

#---------- most possible utensil: ---------- 
 mug

#---------- add effect -----------
! step 1: supplement object
step 1 is done.
! step 2: supplement init
step 2 is done.
! step 3: change goal
step 3 is done.

#---------- generating modified_plan_2! -----------
(walk rob_1 dining kitchen)
(find_cup rob_1 cup_1 kitchen)
(find_faucet rob_1 faucet_1 kitchen)
(turnon_faucet rob_1 faucet_1 kitchen)
(hold_cup rob_1 cup_1 kitchen)
(fill_cup rob_1 cup_1 faucet_1 kitchen drinking_glass_1)
(move_cup rob_1 cup_1 kitchen dining)
(place_cup rob_1 cup_1 table_1 dining)
(walk rob_1 dining kitchen)
(turnoff_faucet rob_1 faucet_1 kitchen)
; cost = 10 (unit cost)
