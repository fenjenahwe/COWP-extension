#---------- generating basic_plan! -----------
(walk rob_1 dining kitchen)
(find_coke rob_1 coke_1 kitchen)
(grasp_coke rob_1 coke_1 kitchen)
(find_glass rob_1 glass_1 kitchen)
(pour_coke rob_1 coke_1 glass_1 kitchen)
(move_glass rob_1 glass_1 kitchen table_1 dining)
(place_glass rob_1 glass_1 table_1 dining)
; cost = 7 (unit cost)

#---------- generating situation! -----------
situation: the glass is broken.
corresponding predicate: glass_is_broken
object in situation: glass
action that has situation: find_glass
object manipulated by robot: glass

#---------- executing plan! -----------
next action: ['walk', 'rob_1', 'dining', 'kitchen']
next action (decoded): a robot walks from dining room to kitchen room.
this action is executed!

next action: ['find_coke', 'rob_1', 'coke_1', 'kitchen']
next action (decoded): a robot finds a coke in kitchen room.
this action is executed!

next action: ['grasp_coke', 'rob_1', 'coke_1', 'kitchen']
next action (decoded): a robot grasps a coke in kitchen room.
this action is executed!

next action: ['find_glass', 'rob_1', 'glass_1', 'kitchen']
next action (decoded): a robot finds a glass in kitchen room.

#---------- checking unexecuted actions! -----------
['find_glass', 'rob_1', 'glass_1', 'kitchen']
['pour_coke', 'rob_1', 'coke_1', 'glass_1', 'kitchen']
['move_glass', 'rob_1', 'glass_1', 'kitchen', 'table_1', 'dining']
['place_glass', 'rob_1', 'glass_1', 'table_1', 'dining']

unexecuted action: ['find_glass', 'rob_1', 'glass_1', 'kitchen']
unexecuted action (decoded): a robot finds a glass in kitchen room.
! prompt design
raw prompt: is it acceptable that a robot finds a glass in kitchen room if the glass is broken?
! response from LLM
response (raw prompt): ['no, it is not acceptable for a robot to find a glass in the kitchen room if the glass is broken']
#---------- current plan cannot be executed! -----------

#---------- adding constraint -----------
! step 1: supplement constraint to action precondition
step 1 is done!
! step 2: supplement action's parameter
step 2 is skipped!
! step 3: supplement type
step 3 is skipped!
! step 4: supplement predicates
step 4 is done!
! step 5: supplement init
step 5 is done!
! step 6: supplement object
step 6 is skipped!

#---------- generating modified_plan_1! -----------
#---------- no modified_plan_1 found! -----------


#---------- call llm_utensils -----------
#---------- utensil that robot can operate: ----------
 ['condiment shaker', 'tea', 'watermelon', 'drinking glass', 'frying pan', 'sponge', 'beer', 'tea bag', 'paper towel', 'dish rack', 'coffee', 'milk', 'wine glass', 'cutlery knife', 'ground coffee', 'mug', 'trash can', 'coffee cup', 'wine', 'place mat']

! prompt design
raw prompt: can a robot pours coke into condiment shaker in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into tea in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into watermelon in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into drinking glass in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot moves a drinking glass in kitchen room near a table in table room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot places a drinking glass on a table in dining room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot pours coke into frying pan in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into sponge in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into beer in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into tea bag in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into paper towel in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into dish rack in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into coffee in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into milk in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into wine glass in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into cutlery knife in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into ground coffee in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into mug in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot moves a mug in kitchen room near a table in table room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot places a mug on a table in dining room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot pours coke into trash can in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot moves a trash can in kitchen room near a table in table room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot places a trash can on a table in dining room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into coffee cup in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into wine in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot pours coke into place mat in kitchen room ?
possibility:
! results from LLM
response (raw prompt): ['no']
#---------- capable_utensils_actionknowledge: ----------
 ['drinking glass', 'mug']

! prompt design
raw prompt: there are some utensils, such as drinking glass, mug. which is the most suitable to replace a glass to drink coke if the glass is broken? if there is no reasonable answer, please output no.
! results from LLM
response (raw prompt): ['a drinking glass is the most suitable replacement for a broken glass']

#---------- most possible utensil: ---------- 
 drinking glass

#---------- add effect -----------
! step 1: supplement object
step 1 is done.
! step 2: supplement init
step 2 is done.
! step 3: change goal
problem_goal_1: ['and (glass_is_filled glass_1) (glass_is_placed glass_1))']
target_object: glass
utensil: drinking_glass
step 3 is done.

#---------- generating modified_plan_2! -----------
(walk rob_1 dining kitchen)
(find_coke rob_1 coke_1 kitchen)
(grasp_coke rob_1 coke_1 kitchen)
(find_glass rob_1 drinking_glass_1 kitchen)
(pour_coke rob_1 coke_1 drinking_glass_1 kitchen)
(move_glass rob_1 drinking_glass_1 kitchen table_1 dining)
(place_glass rob_1 drinking_glass_1 table_1 dining)
; cost = 7 (unit cost)
