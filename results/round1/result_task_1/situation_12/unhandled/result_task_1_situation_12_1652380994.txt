#---------- generating basic_plan! -----------
(walk rob_1 kitchen dining)
(find_table rob_1 table_1 dining)
(takeout_vacuum rob_1 vacuum_1 dining)
(plug_vacuum rob_1 vacuum_1 dining)
(turnon_vacuum rob_1 vacuum_1 dining)
(clean_table rob_1 vacuum_1 table_1 dining)
; cost = 6 (unit cost)

#---------- generating situation! -----------
situation: the vacuum is battery powered and does not need plug in.
corresponding predicate: vacuum_battery_powered
object in situation: plug
action that has situation: plug_vacuum
object manipulated by robot: vacuum

#---------- executing plan! -----------
next action: ['walk', 'rob_1', 'kitchen', 'dining']
next action (decoded): a robot walks from kitchen room to dining room.
this action is executed!

next action: ['find_table', 'rob_1', 'table_1', 'dining']
next action (decoded): a robot find a table in dining room.
this action is executed!

next action: ['takeout_vacuum', 'rob_1', 'vacuum_1', 'dining']
next action (decoded): a robot takes out a vacuum in dining room.
this action is executed!

next action: ['plug_vacuum', 'rob_1', 'vacuum_1', 'dining']
next action (decoded): a robot plugs a vacuum in dining room.

#---------- checking unexecuted actions! -----------
['plug_vacuum', 'rob_1', 'vacuum_1', 'dining']
['turnon_vacuum', 'rob_1', 'vacuum_1', 'dining']
['clean_table', 'rob_1', 'vacuum_1', 'table_1', 'dining']

unexecuted action: ['plug_vacuum', 'rob_1', 'vacuum_1', 'dining']
unexecuted action (decoded): a robot plugs a vacuum in dining room.
! prompt design
raw prompt: is it acceptable that a robot plugs a vacuum in dining room if the vacuum is battery powered and does not need plug in?
! response from LLM
response (raw prompt): ['yes, it is acceptable for a robot to plug in a vacuum in the dining room if the vacuum is battery powered and does not need to be plugged']
#---------- current plan cannot be executed! -----------

#---------- adding constraint -----------
! step 1: supplement constraint to action precondition
step 1 is done!
! step 2: supplement action's parameter
step 2 is done!
! step 3: supplement type
step 3 is done!
! step 4: supplement predicates
step 4 is done!
! step 5: supplement init
step 5 is done!
! step 6: supplement object
step 6 is done!

#---------- generating modified_plan_1! -----------
#---------- no modified_plan_1 found! -----------


#---------- call llm_utensils -----------
#---------- utensil that robot can operate: ----------
 ['frying pan', 'coffee cup', 'drinking glass', 'coffee filter', 'bucket', 'mug', 'glass', 'rag', 'trash can', 'measuring cup', 'paper towel', 'cutting board', 'cutlery knife', 'dish rack']

! prompt design
raw prompt: can a robot frying pans a vacuum in dining room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot coffee cups a vacuum in dining room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot drinking glasss a vacuum in dining room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot coffee filters a vacuum in dining room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot buckets a vacuum in dining room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot mugs a vacuum in dining room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot glasss a vacuum in dining room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot rags a vacuum in dining room ?
possibility:
! results from LLM
response (raw prompt): ['yes']

! prompt design
raw prompt: can a robot trash cans a vacuum in dining room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot measuring cups a vacuum in dining room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot paper towels a vacuum in dining room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot cutting boards a vacuum in dining room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]

! prompt design
raw prompt: can a robot cutlery knifes a vacuum in dining room ?
possibility:
! results from LLM
response (raw prompt): ['no']

! prompt design
raw prompt: can a robot dish racks a vacuum in dining room ?
possibility:
! experience found
! results from LLM
response (raw prompt): ["'no'"]
#---------- capable_utensils_actionknowledge: ----------
 ['rag']

#---------- most possible utensil: ---------- 
 rag

#---------- add effect -----------
! step 1: supplement object
step 1 is done.
! step 2: supplement init
step 2 is done.
! step 3: change goal
step 3 is done.

#---------- generating modified_plan_2! -----------
(walk rob_1 kitchen dining)
(find_table rob_1 table_1 dining)
(takeout_vacuum rob_1 vacuum_1 dining)
(plug_vacuum rob_1 vacuum_1 dining dish_rack_1)
(turnon_vacuum rob_1 vacuum_1 dining)
(clean_table rob_1 vacuum_1 table_1 dining)
(turnoff_vacuum rob_1 vacuum_1 table_1 dining)
; cost = 7 (unit cost)
